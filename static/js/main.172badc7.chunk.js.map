{"version":3,"sources":["components/box.jsx","App.js","reportWebVitals.js","index.js"],"names":["backgroundStyle","height","width","borderStyle","justifyContent","backgroundColor","borderRadius","playerStyle","color","ballStyle","display","zIndex","position","Box","props","style","val","name","inner","flexDirection","outer","marginTop","marginLeft","Text","padding","dividerStyle","fontSize","score","heigth","gridTemplate","App","resetGame","setState","ball","Math","round","ROW_SIZE","moveBoard","playerBoard","isUp","playerEdge","PLAYER_BOARD_SIZE","touchingEdge","deltaY","newDir","state","deltaX","map","x","pos","COL_SIZE","touchingPaddle","player","indexOf","opponent","isScore","moveOpponent","movedPlayer","opponentDir","touchingPaddleEdge","bounceBall","newState","playerScore","opponentScore","pause","keyInput","keyCode","paddle","Array","_","ballSpeed","opponentSpeed","InitialState","setInterval","this","document","onkeydown","title","board","key","k","divider","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.172badc7.chunk.js","sourcesContent":["import React from 'react';\n\n/* Enum */\nconst BACKGROUND = 0;\nconst PLAYER = 1;\nconst BALL = 2;\nexport {\n    BACKGROUND,\n    PLAYER,\n    BALL,\n}\n/* style sheet */\nconst backgroundStyle = {\n    height: \"35px\",\n    width: \"35px\",\n    borderStyle: \"solid\",\n    justifyContent: \"center\",\n    backgroundColor : \"black\",\n    borderRadius: \"2px\",\n}\nconst playerStyle = {\n    height: \"35px\",\n    width: \"35px\",\n    borderStyle: \"solid\",\n    justifyContent: \"center\",\n    backgroundColor : \"blue\",\n    color: \"white\"\n}\n\nconst ballStyle = {\n    height: \"35px\",\n    width: \"35px\",\n    display: \"block\",\n    backgroundColor: \"yellow\",\n    justifyContent: \"center\",\n    borderRadius: \"100%\",\n    color:\"white\",\n    zIndex: \"10\",\n    position: 'relative'\n}\n\n/* function to select style */\nconst getStyle = (val) => {\n    if (val === BACKGROUND) {\n        return {};\n    } if (val === PLAYER) {\n        return playerStyle;\n    } else {\n        return ballStyle;\n    }\n}\n\nconst Box = (props) => <div style={backgroundStyle}> \n                        <div style={getStyle(props.name)} /> \n                    </div>\n\nexport default Box;","import React from 'react';\nimport Box, { BACKGROUND, PLAYER, BALL } from './components/box.jsx';\n\n\n/* size */\nconst ROW_SIZE = 10\nconst COL_SIZE = 20\n\n/* BOARD */\nconst PLAYER_BOARD_SIZE = 3\nconst BOARD_EDGE_SPACE = 1;\n\n/* buttons */\nconst PLAYER_UP   = 38  // up arrow\nconst PLAYER_DOWN = 40  // down arrow\nconst PAUSE       = 32  // space\n \nconst inner = {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"justify\", \n}\n\nconst outer = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"justify\", \n    marginTop: \"9em\",\n    marginLeft: \"25em\",\n    Text: \"100px\",\n    padding: \"10px\"\n}\nconst dividerStyle = {\n    marginLeft: \"50px\",\n    fontSize: \"50px\",\n    color: \"white\"\n}\n\nconst score = {\n    marginLeft: \"100px\",\n    fontSize: \"50px\",\n    color: \"white\"\n}\n\nconst style = {\n    width: \"250px\",\n    heigth: \"250px\",\n    display: \"grid\",\n    gridTemplate: `repeat(${ROW_SIZE}, 1fr) / repeat(${COL_SIZE}, 1fr)`\n}\n\n\nconst InitialState = () => {\n    const paddle = [...Array(PLAYER_BOARD_SIZE)].map((_, pos) => pos);\n    return {\n        /* board */\n        player: paddle.map(x => (x  * COL_SIZE) + BOARD_EDGE_SPACE),\n        opponent: paddle.map(x => ((x+1) * COL_SIZE)-(BOARD_EDGE_SPACE+1)),\n        ball: Math.round((ROW_SIZE * COL_SIZE)/2)+ ROW_SIZE,\n        /* ball */\n        ballSpeed: 100,\n        deltaY: -COL_SIZE,\n        deltaX: -1, // -1 means the ball is moving towards player 1 means towards opponent\n        pause: true,\n        /* for dumb Ai */   \n        opponentSpeed: 150,\n        opponentDir: false,\n        /* Score */\n        playerScore: 0,\n        opponentScore: 0,\n    }\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = InitialState();\n    }\n\n    resetGame = () => this.setState({\n       ball: Math.round((ROW_SIZE * COL_SIZE)/2)+ ROW_SIZE,\n    })\n\n    moveBoard = (playerBoard, isUp) => {\n        const playerEdge = isUp? playerBoard[0]: playerBoard[PLAYER_BOARD_SIZE-1];\n\n        if (!this.touchingEdge(playerEdge)) {\n            const deltaY =  (isUp ? -COL_SIZE : COL_SIZE);\n            /* if ball touches the edge */\n            const newDir = (this.state.deltaY !== COL_SIZE ^ isUp) ? -this.state.deltaY: this.state.deltaY;\n            \n            if (!this.touchingEdge(this.state.ball)) {\n                switch (this.state.ball) {\n                    case playerEdge + deltaY -1:\n                        this.setState({\n                            deltaY: newDir,\n                            deltaX: -1,\n                        })\n                        break;\n                    case playerEdge:\n                        this.setState({\n                            deltaY: newDir,\n                        })\n                        break;\n                    case playerEdge + deltaY + 1:\n                        this.setState({\n                            deltaY: newDir,\n                            deltaX: 1,\n                        })\n                        break;\n                }\n            }\n            return playerBoard.map(x=> x + deltaY);\n        }      \n        return false\n    }\n    \n    componentDidMount() {\n        /* moving the ball */\n        setInterval(() => {\n            if (!this.state.pause){\n                this.bounceBall();\n            }\n        }, this.state.ballSpeed);\n        /* moving the opponent */\n        setInterval(() => {\n            if (!this.state.pause){\n               this.moveOpponent();\n            }\n        }, this.state.opponentSpeed);\n        \n        document.onkeydown = this.keyInput;\n        document.title = \"ping-pong\"\n    }\n    \n    touchingEdge = (pos) => (0 <= pos && pos < COL_SIZE) || (COL_SIZE*(ROW_SIZE-1) <= pos && pos < COL_SIZE * ROW_SIZE) \n\n    touchingPaddle = (pos) => {\n        return (this.state.player.indexOf(pos) !== -1) || \n            (this.state.opponent.indexOf(pos) !== -1) ||\n            this.state[(this.state.deltaX === -1) ? \"player\":\"opponent\"].indexOf(pos+this.state.deltaX) !== -1;\n    }\n\n    isScore = (pos) => (this.state.deltaX === -1 && pos % COL_SIZE === 0) || (this.state.deltaX === 1 && (pos+1) % COL_SIZE === 0)\n\n    moveOpponent = () => {\n        const movedPlayer = this.moveBoard(this.state.opponent, this.state.opponentDir); \n        movedPlayer ? this.setState({opponent: movedPlayer}): \n            this.setState({opponentDir: !this.state.opponentDir});\n    }\n\n    touchingPaddleEdge = (pos) => this.state.player[0] === pos ||\n                                this.state.player[PLAYER_BOARD_SIZE -1] === pos ||\n                                this.state.opponent[0] === pos ||\n                                this.state.opponent[PLAYER_BOARD_SIZE -1] === pos\n\n    bounceBall = () => {\n        const newState = this.state.ball + this.state.deltaY+this.state.deltaX;\n        if (this.touchingEdge(newState)) {\n            this.setState({deltaY: -this.state.deltaY})\n        } \n\n        if (this.touchingPaddleEdge(newState)) {\n            this.setState({deltaY: -this.state.deltaY}) \n        }\n\n        if (this.touchingPaddle(newState)) {\n            this.setState({deltaX: -this.state.deltaX}) \n        } \n        \n        /* updating board */\n        this.setState({ball: newState})\n\n        /* checking if loss or won */\n        if (this.isScore(newState)) {\n            if (this.state.deltaX !== -1) {\n                /* player won */ \n                this.setState({\n                    playerScore: this.state.playerScore+1,\n                    ball: newState,\n                })\n            } else {\n                /* opponent won */ \n                this.setState({\n                    opponentScore: this.state.opponentScore+1,\n                    ball: newState,\n                })\n            }\n            this.setState({pause: true})\n            this.resetGame();\n        }\n    } \n\n    keyInput = ({keyCode}) => {\n        switch (keyCode) {\n            case PLAYER_UP:\n            case PLAYER_DOWN:\n                const movedPlayer = this.moveBoard(this.state.player, keyCode===PLAYER_UP); \n                if (movedPlayer) {\n                    this.setState({player: movedPlayer, pause: false})\n                }\n                break;\n            case PAUSE:\n                this.setState({pause: true})\n                break;\n        }\n    }\n\n    render() {\n        const board = [...Array(ROW_SIZE * COL_SIZE)].map((_, pos) => {\n            let val = BACKGROUND;\n            if ((this.state.player.indexOf(pos) !== -1) || (this.state.opponent.indexOf(pos) !== -1)) {\n                val = PLAYER;\n            } else if (this.state.ball === pos) {\n                val = BALL;\n            }\n            return <Box key={pos} k={pos} name={val} />;\n        })\n\n        const divider = [...Array(ROW_SIZE/2+2)].map(_=> <div>{\"|\"}</div>);\n        return (\n        <div style={outer}>\n            <h1> {\"[space]\"} {this.state.pause? \"PLAY/pause\": \"play/PAUSE\"} </h1>\n            <div style={inner}>\n                <div style={style}>{board}</div>\n                <div style={score}>{this.state.playerScore}</div>\n                <div style={dividerStyle}>  {divider} </div>\n                <div style={dividerStyle}>{this.state.opponentScore}</div>\n\n            </div>\n            <h3> {\"press up and down to move\"} </h3>\n\n        </div>\n        )\n    }\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}